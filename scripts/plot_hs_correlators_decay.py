'''
This script generates a plot demonstrating the decay of the correlators (as a 
function of distance). Uses data generated by hs_corr.jl

Author: Lucas Z. Brito
'''

import matplotlib.pyplot as plt 
import numpy as np
import pandas as pd 
from matplotlib.ticker import ScalarFormatter

n = 20
df = pd.read_csv(f'../data/hs/hs_corr_n={n}.csv')
cl = df['cl'].tolist()
bq = df['bq'].tolist()
r = np.array(df['r'].tolist())
conn = df['conn'].tolist()

decay_rate = 1.5
smooth_r = np.linspace(r[0], r[-1], 100)
exp_decay = conn[0] * np.exp(r[0] / decay_rate) * np.exp(- smooth_r / decay_rate) + 0.005
rat_decay = conn[0] * r[0] / smooth_r

# LINEAR --------------
fig, ax = plt.subplots() 
plt.xticks(r)
ax.plot(r, bq, label='$\langle(\mathbf{S}_1 \cdot \mathbf{S}_2)'\
		+ '(\mathbf{S}_{r+2} \cdot \mathbf{S}_{r+3})\\rangle$')
ax.plot(r, cl, label='$\langle(\mathbf{S}_1 \cdot \mathbf{S}_2)\\rangle'\
		+ '\langle(\mathbf{S}_{r+2} \cdot \mathbf{S}_{r+3})\\rangle$')
ax.plot(r, conn, label='Conn. correlator')

ax.plot(smooth_r, exp_decay, color='black', linestyle='dotted', label='$\propto \exp(-r/\lambda)$')
ax.plot(smooth_r, rat_decay, color='black', linestyle='dashed', label='$\propto O(1/r)$')
# ax.plot(smooth_r, - exp_decay, color='black', linestyle='dotted')
ax.legend()
# ax.legend(loc='center left', bbox_to_anchor=(1, 0.5))
pad = 1 - 0.05
ax.text(pad, -pad + 1, f'$N={n}$', ha='right', va='bottom', transform=ax.transAxes)
ax.set_xlabel('$r$')
plt.title('$\\langle (\mathbf{S}_1 \cdot \mathbf{S}_2)'\
	+'(\mathbf{S}_{r+2}\cdot\mathbf{S}_{r+3}) \\rangle'\
	+'-\\langle\mathbf{S}_1 \cdot \mathbf{S}_2\\rangle'\
	+'\\langle\mathbf{S}_{r+2}\mathbf{S}_{r+3}\\rangle $')
plt.savefig('./hs/hs_conn_corr_linear.pdf')
plt.savefig('./hs/hs_conn_corr_linear.png', dpi=500)


# LOG --------------
fig, ax = plt.subplots() 
plt.xticks(r)
ax.plot(r, bq, label='$\langle(\mathbf{S}_1 \cdot \mathbf{S}_2)'\
		+ '(\mathbf{S}_{r+2} \cdot \mathbf{S}_{r+3})\\rangle$')
ax.plot(r, cl, label='$\langle(\mathbf{S}_1 \cdot \mathbf{S}_2)\\rangle'\
		+ '\langle(\mathbf{S}_{r+2} \cdot \mathbf{S}_{r+3})\\rangle$')
ax.loglog(r, np.abs(conn), label='Conn. correlator')

ax.loglog(smooth_r, rat_decay, color='black', linestyle='dashed', label='$\propto O(1/r)$')
ax.legend()
pad = 1 - 0.05
ax.text(- pad + 1, -pad + 1, f'$N={n}$', ha='left', va='bottom', transform=ax.transAxes)
ax.set_xlabel('$\log r$')
ax.set_ylabel('$\log |\\textrm{conn. corr.}|$')
plt.title('$\\langle (\mathbf{S}_1 \cdot \mathbf{S}_2)'\
	+'(\mathbf{S}_{r+2}\cdot\mathbf{S}_{r+3}) \\rangle'\
	+'-\\langle\mathbf{S}_1 \cdot \mathbf{S}_2\\rangle'\
	+'\\langle\mathbf{S}_{r+2}\mathbf{S}_{r+3}\\rangle $')
ax.set_xticks(r, minor=False)
ax.set_xticks([], minor=True)
ax.xaxis.set_major_formatter(ScalarFormatter())
plt.savefig('./hs/hs_conn_corr_log.pdf')
plt.savefig('./hs/hs_conn_corr_log.png', dpi=500)